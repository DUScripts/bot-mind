{"slots":{"0":{"name":"databank","type":{"events":[],"methods":[]}},"1":{"name":"slot2","type":{"events":[],"methods":[]}},"2":{"name":"slot3","type":{"events":[],"methods":[]}},"3":{"name":"slot4","type":{"events":[],"methods":[]}},"4":{"name":"slot5","type":{"events":[],"methods":[]}},"5":{"name":"slot6","type":{"events":[],"methods":[]}},"6":{"name":"slot7","type":{"events":[],"methods":[]}},"7":{"name":"slot8","type":{"events":[],"methods":[]}},"8":{"name":"slot9","type":{"events":[],"methods":[]}},"9":{"name":"slot10","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}},"-3":{"name":"player","type":{"events":[],"methods":[]}},"-2":{"name":"construct","type":{"events":[],"methods":[]}},"-4":{"name":"system","type":{"events":[],"methods":[]}},"-5":{"name":"library","type":{"events":[],"methods":[]}}},"handlers":[{"code":"-- Project BotMind by StarZet (PART_HTML_HUD)\n-- Bring more life in Dual Universe!\n\nsystem.showHelper(false)\nunit.hideWidget()\nunit.setTimer(\"t2\", 0.05)\nsystem.showScreen(true)\ncolorMain = \"181,224,240\" --default is \"181,224,240\"\ntextColor = \"181,224,240\" \nmenuBorder = \"ridge\"\nmenuDisplay = \"none\"\nmenuState = false\nmBTMove=\"0\"\nmBOp=\"1\"\nupOpas = \"0.1\"\ndownOpas = \"0.1\"\nenterOpas = \"0.1\"\n\nanswerBoxHeight = \"52\"\naBoxTimeDefault = 2 --export:Time before hide the answer box, when menu closed\naBoxTimeLeft = 0\naBoxDisplay = \"none\"\n\nsideBoxHor = 0\nsideBoxVert = 0\nsideBoxHtml = \"\"\nlastHor = 0\nlastVert = 0\nshowSideBox = true --export:Pointer on which side are bot.\nsideBoxState = showSideBox\n\nanswerText = \"-no signal-\"\ntxtVariants = {''}\nvariantNow = 1\nscrollHeight = 100/#txtVariants\nscrollTop = 100/#txtVariants*(variantNow-1)\nscrollTriggeredTime = 0\nactionRepeatDelay = 0.25\nmessage = \"\"\n\nfunction mysplit(inputstr, sep)\n   if sep == nil then\n      sep = \"%s\"\n   end\n   local t={}\n   for str in string.gmatch(inputstr, \"([^\"..sep..\"]+)\") do\n      table.insert(t, str)\n   end\n   return t\nend\n\nfunction getDBInput()\n    input = databank.getStringValue(\"input\")\n    params = mysplit(input,\"@@\")\n    if params[2] == nil then\n        params = {}\n    end\n    r,g,b =  params[1] or 0.710, params[2] or 0.878, params[3] or 0.941\n    colorMain = math.ceil(r*255) ..','.. math.ceil(g*255) ..','.. math.ceil(b*255)\n    r2,g2,b2 =  params[4] or 0.710, params[5] or 0.878, params[6] or 0.941\n    textColor = math.ceil(r2*255) ..','.. math.ceil(g2*255) ..','.. math.ceil(b2*255)\n    answerText = params[7] or \"\"\n    variantNow =  tonumber(params[8]) or 1\n    txtVariants = {\"\"}\n    if params[9]~= nil then\n        for n, paramN in ipairs(params) do\n            if n > 8 and params[n]~= nil then\n                txtVariants[n -8] = params[n]\n            end\n        end\n    end\n    scroll(0)\n    render()\n    if answerText == \"-unit.exit-\" then\n        unit.exit()\n    end\nend\n\nif databank then\n    if databank.getClass()==\"DataBankUnit\" then\n        databank.setStringValue(\"message\",\"hudInput\")\n        else\n        answerText = \"Wrong connection to DATABANK slot, have: \"..databank.getClass()\n    end\n    else\n    answerText = \"Need DATABANK\"\nend\n\n-- Creates <div> html string of variants\nfunction variantsHtml(txtVariants)\n    local html = \"\"\n    for n,textN in ipairs(txtVariants) do\n        if n >= variantNow -1 then\n            if n == variantNow then\n                --chosenVariant = var\n                html = html..[[<div class=\"variant\" style=\" height:auto; white-space: normal;\n                    box-shadow: inset 0 0 2vh rgba(]]..colorMain..[[,0.8);}\">]]\n                    ..n..\". \"..textN..[[</div>]]\n                else\n                html = html..[[<div class=\"variant\">]]..n..\". \"..textN..[[</div>]]\n            end\n        end\n    end\n    return html\nend\n\n\nfunction checkHideAnswerBox()\n    if menuDisplay == \"none\" then\n        if aBoxTimeLeft > -1 then\n            aBoxTimeLeft = aBoxTimeLeft -1\n        end\n        if aBoxTimeLeft == 0 then\n            aBoxDisplay = \"none\"\n            unit.stopTimer(\"t1\")\n            render()\n        end\n    end\nend\n\nfunction sideBoxH(t1,t2)\n    return [[<div style=\"position:absolute;]]..t1..[[ width:15vw; height:100vh;overflow: hidden;\">\n                <div style=\"position:relative; ]]..t2..[[ top:28vh; width:20vw;height:44vh;\n                border-radius: 15vh; box-shadow: 0 0 12vh  1vh rgba(]]..colorMain..[[,1)\">\n                    <div style=\"position:relative; width:20vw;height:44vh; border-radius: 15vh;\n                    box-shadow:inset 0 0 5vh 1vh rgba(]]..colorMain..[[,1)\">\n            </div></div></div>]]\nend\nfunction sideBoxV(t1,t2)\n    return [[<div style=\"position:absolute;left:0vw; width:100vw; top:]]..t1..[[vh; height:13vh;overflow: hidden;\">\n                <div style=\"position:relative;left:28vw; top:]]..t2..[[vh; width:44vw; height:20vw;\n                border-radius: 15vw; box-shadow: 0 0 12vh  1vh rgba(]]..colorMain..[[,1)\">\n                    <div style=\"position:relative; width:44vw; height:20vw; border-radius: 15vw;\n                    box-shadow:inset 0 0 5vh 1vh rgba(]]..colorMain..[[,1)\">\n                </div></div></div>]]\nend\n\nfunction setSideBox()\n    local html = \"\"\n    if sideBoxHor == -1 then\n        html = html..sideBoxH(\"\",\"left:10vw;\")\n    end\n    if sideBoxHor == 1 then\n        html = html..sideBoxH(\"left:85vw;\",\"right:15vw;\")\n    end\n    if sideBoxVert == -1 then\n        html = html..sideBoxV(\"0\",\"7\")\n    end\n    if sideBoxVert == 1 then\n        html = html..sideBoxV(\"89\",\"-28\")\n    end\n    sideBoxHtml = html\n    render()\nend\n\nfunction scroll(dir)\n    if dir < 0 then\n        if variantNow > 1 then\n            variantNow = variantNow - 1\n        end\n    end\n    if dir > 0 then\n        if variantNow < #txtVariants then\n            variantNow = variantNow + 1\n        end\n    end\n    scrollHeight = 100/#txtVariants\n    scrollTop = 100/#txtVariants*(variantNow-1)\nend\n\nfunction scrollLoop(dir)\n    if (system.getArkTime() - scrollTriggeredTime) > actionRepeatDelay then\n        scrollTriggeredTime = system.getArkTime()\n        scroll(dir)\n        render()\n        if actionRepeatDelay > 0.05 then\n            actionRepeatDelay = actionRepeatDelay*0.8\n        end\n    end\nend\n\nfunction press(altN)\n    actionRepeatDelay = 0.4\n    scrollTriggeredTime = system.getArkTime()\n    if altN == \"1t\" then\n        menuBorder = \"groove\"\n        mBTMove = \"0.2\"\n        if menuState then\n            sideBoxState = false\n            sideBoxVert = 0\n            lastVert = 0\n            sideBoxHor = 0\n            lastHor = 0\n            setSideBox()\n            answerBoxHeight = \"52\"\n            menuDisplay = \"none\"\n            aBoxTimeLeft = aBoxTimeDefault\n            unit.setTimer(\"t1\",1)\n            mBOp=\"1\"\n            menuState = false\n            else\n            if showSideBox then\n                sideBoxState = true\n            end\n            answerBoxHeight = \"32\"\n            menuDisplay = \"block\"\n            aBoxDisplay = \"block\"\n            mBOp=\"0.5\"\n            menuState = true\n        end\n    end\n    if altN == \"1f\" then\n        menuBorder = \"ridge\"\n        mBTMove=\"0\"\n    end\n    if altN == \"2t\" then\n        scroll(-1)\n        upOpas = \"0.5\"\n    end\n    if altN == \"2f\" then\n        upOpas = \"0.1\"\n    end\n    if altN == \"3t\" then\n        scroll(1)\n        downOpas = \"0.5\"\n    end\n    if altN == \"3f\" then\n        downOpas = \"0.1\"\n    end\n    if altN == \"4t\" then\n        databank.setStringValue(\"message\",\"hudOutput\")\n        databank.setStringValue(\"hudOutput\",variantNow)\n        enterOpas = \"0.5\"\n    end\n    if altN == \"4f\" then\n        enterOpas = \"0.1\"\n    end\n    render()\nend\n\nfunction render()\n    content = \n    [[<style>\n    .menu {position:absolute; left:28vw; top:69vh; display: ]]..menuDisplay..[[; width:44vw;\n        height:20vh; box-shadow: inset 0 0 5vh rgba(]]..colorMain..[[,0.3);\n        background-color: rgba(]]..colorMain..[[,0.2); border: 0.5vh solid rgb(]]..colorMain..[[);\n        border-radius: 2vh; color: rgb(]]..textColor..[[)}\n    .menuButton {position:absolute; left:11vw; top:90vh; display: block; width:5vw; height:6.3vh;\n        opacity:]]..mBOp..[[;text-align:center; font-size:2vh;  border-radius: 0.8vh;\n        background-color: rgba(]]..colorMain..[[,0.1); color: rgb(]]..colorMain..[[);\n        border: 0.7vh ]].. menuBorder ..[[ rgb(]]..colorMain..[[); }\n    .buttons {position:absolute; left:1vw; display: block; width:4vw; height:5.3vh;\n        text-align:center; font-size:1.7vh; border: 0.5vh solid rgb(]]..colorMain..[[);\n        border-radius: 0.5vh;color: rgb(]]..colorMain..[[)}\n    .trg {position:absolute; left:0.9vw; border: 1.4vh solid transparent;}\n    .variant {position:relative;left:0.5vw;  width:35.5vw;  overflow: hidden; height:2.4vh;\n        text-align:left; font-size:1.6vh; padding: 0.2vw 0.5vw; text-overflow: ellipsis;\n        background-color: rgba(30,30,30,0.7); margin-top: 0.5vh;\n        box-shadow: 0 0 2vh rgba(100,100,100,1);white-space: nowrap;}\n    </style>\n    ]]..sideBoxHtml..[[\n    <div class=\"menuButton\">\n        <div style=\"transform: translate(]]..mBTMove..\"vh,\"..mBTMove..[[vh);\">\n        MENU<br>alt+1</div>\n    </div>\n    \n    <div style=\"display:]]..aBoxDisplay..[[; position: absolute; left:28vw; top:35vh;\n        height:]]..answerBoxHeight..[[vh; width:44vw;color: rgb(]]..textColor..[[) \">\n        <div style=\"position: absolute ; bottom: 0vh; font-size:1.6vh;\n            background-color: rgba(30,30,30,0.7); width:44vw; padding: 1.1vh 1.5vw;\n            box-shadow: 0 0 2vh rgba(100,100,100,1); border-radius: 1.7vh;\">\n            ]]..answerText..[[</div>\n        </div>\n    </div>\n    \n    <div class=\"menu\">\n    <div class=\"buttons\" style=\"color: gray; top:0.9vh; background-color: rgba(]]..colorMain..\",\"..upOpas..[[);\">\n        <div class=\"trg\" style=\"top:-1.1vh; border-bottom: 1.8vh solid rgb(]]..colorMain..[[);\"></div>\n        <br>alt+2</div>\n    <div class=\"buttons\" style=\"color: gray; top:7.0vh; background-color: rgba(]]..colorMain..\",\"..downOpas..[[);\">\n        <div class=\"trg\" style=\"top:0.4vh; border-top: 1.8vh solid rgb(]]..colorMain..[[);\"></div>\n        <br>alt+3</div>\n    <div class=\"buttons\" style=\"top:13.1vh; background-color: rgba(]]..colorMain..\",\"..enterOpas..[[);\">\n        ENTER<div style=\"color: gray;\">alt+4</div></div>\n    <div style=\"position:absolute; left:5.5vw; top:1vh; width:37vw; height:17vh; overflow:hidden;\">\n        ]]..variantsHtml(txtVariants)..[[\n    </div>\n    <div style=\"position:absolute; left:41.8vw; top:1.3vh; width:1vw; height:16.5vh;\n        background-color: rgba(10,10,10,0.7)\">\n        <div style=\"position:absolute; height:]]..scrollHeight..[[%; top:]]..scrollTop..[[%;\n        background-color: rgba(]]..colorMain..[[,0.7); width:100%;\">\n        </div>\n    </div>\n    </div>]]\n    system.setScreen(content)\nend\nrender()\npress(\"1t\")\n\n-- devs function from \\Dual Universe\\data\\lua\\Helpers.lua\nfunction getRoll(gravityDirection, forward, right)\n    local horizontalRight = gravityDirection:cross(forward):normalize_inplace()\n    local roll = math.acos(utils.clamp(horizontalRight:dot(right), -1, 1)) * constants.rad2deg\n    if horizontalRight:cross(right):dot(forward) < 0 then roll = -roll end\n    return roll\nend","filter":{"args":[],"signature":"onStart()","slotKey":"-1"},"key":"0"},{"code":"checkHideAnswerBox()","filter":{"args":[{"value":"t1"}],"signature":"onTimer(tag)","slotKey":"-1"},"key":"1"},{"code":"if sideBoxState then\n    cSelf = vec3(system.getCameraWorldPos())\n    destTo = vec3(construct.getWorldPosition())\n    vDestTo = vec3(vec3(destTo) - cSelf):normalize_inplace()\n    forward = vec3(system.getCameraWorldForward())\n    right = vec3(system.getCameraWorldRight())\n    up = vec3(system.getCameraWorldUp())\n    currentYawDeg = getRoll(vDestTo, up, right)\n    local m = 1\n    if math.abs(currentYawDeg) > 90 then\n        m = 0.2\n    end\n    currentPitchDeg = getRoll(vDestTo, right, -up)\n    if currentYawDeg > -135 and currentYawDeg < -45 then\n        currentPitchDeg = getRoll(vDestTo, forward, -up)\n    end\n    if currentYawDeg < 135 and currentYawDeg > 45 then\n        currentPitchDeg = getRoll(vDestTo, -forward, -up)\n    end\n    if currentYawDeg > 135 or currentYawDeg < -135 then\n        currentPitchDeg = getRoll(vDestTo, -right, -up)\n    end\n    \n    if currentPitchDeg > 40*m then\n        sideBoxVert = 1\n    end\n    if currentPitchDeg < 40*m and currentPitchDeg > -45*m  then\n        sideBoxVert = 0\n    end\n    if currentPitchDeg < -45*m then\n        sideBoxVert = -1\n    end\n        \n    if currentYawDeg > 55 then\n        sideBoxHor = 1\n    end\n    if currentYawDeg < 55 and currentYawDeg > -55  then\n        sideBoxHor = 0\n    end\n    if currentYawDeg < -55 then\n        sideBoxHor = -1\n    end\n    \n    if lastHor ~= sideBoxHor then\n        lastHor = sideBoxHor\n        setSideBox()\n    end\n    if lastVert ~= sideBoxVert then\n        lastVert = sideBoxVert\n        setSideBox()\n    end\nend\n\nmessage = databank.getStringValue(\"message\")\nif message ~= \"\" then\n    if message == \"mindOutput\" then\n        databank.setStringValue(\"message\",\"\")\n        getDBInput()\n    end\nend","filter":{"args":[{"value":"t2"}],"signature":"onTimer(tag)","slotKey":"-1"},"key":"2"},{"code":"unit.exit()","filter":{"args":[{"value":"option5"}],"signature":"onActionStart(action)","slotKey":"-4"},"key":"3"},{"code":"press(\"4t\")","filter":{"args":[{"value":"option4"}],"signature":"onActionStart(action)","slotKey":"-4"},"key":"4"},{"code":"press(\"4f\")","filter":{"args":[{"value":"option4"}],"signature":"onActionStop(action)","slotKey":"-4"},"key":"5"},{"code":"press(\"1t\")","filter":{"args":[{"value":"option1"}],"signature":"onActionStart(action)","slotKey":"-4"},"key":"6"},{"code":"press(\"1f\")","filter":{"args":[{"value":"option1"}],"signature":"onActionStop(action)","slotKey":"-4"},"key":"7"},{"code":"press(\"2t\")","filter":{"args":[{"value":"option2"}],"signature":"onActionStart(action)","slotKey":"-4"},"key":"8"},{"code":"press(\"2f\")","filter":{"args":[{"value":"option2"}],"signature":"onActionStop(action)","slotKey":"-4"},"key":"9"},{"code":"press(\"3t\")","filter":{"args":[{"value":"option3"}],"signature":"onActionStart(action)","slotKey":"-4"},"key":"10"},{"code":"press(\"3f\")","filter":{"args":[{"value":"option3"}],"signature":"onActionStop(action)","slotKey":"-4"},"key":"11"},{"code":"scrollLoop(-1)","filter":{"args":[{"value":"option2"}],"signature":"onActionLoop(action)","slotKey":"-4"},"key":"12"},{"code":"scrollLoop(1)","filter":{"args":[{"value":"option3"}],"signature":"onActionLoop(action)","slotKey":"-4"},"key":"13"}],"methods":[],"events":[]}
